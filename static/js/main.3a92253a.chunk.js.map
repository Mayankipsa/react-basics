{"version":3,"sources":["Table.js","FormAddChar.js","App.js","index.js"],"names":["Table","this","props","charactersData","removeCharacter","className","Component","TableHeader","scope","TableBody","rows","map","row","index","key","name","job","onClick","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","htmlFor","type","id","onChange","App","characters","filter","character","i","ReactDOM","render","document","getElementById"],"mappings":"sNAEMA,E,uKACQ,IAAD,EACuCC,KAAKC,MAAzCC,EADH,EACGA,eAAgBC,EADnB,EACmBA,gBAExB,OACI,2BAAOC,UAAU,SACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWF,eAAgBA,EAAgBC,gBAAiBA,S,GAPxDE,aAcdC,EAAc,WAChB,OACI,+BACI,4BACI,wBAAIC,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,OACA,wBAAIA,MAAM,OAAV,aAMVC,EAAY,SAACP,GAEf,IAAMQ,EAAOR,EAAMC,eAAeQ,KAAI,SAACC,EAAKC,GACxC,OACI,wBAAIC,IAAKD,GACL,wBAAIL,MAAM,OAAOK,EAAM,GACvB,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQX,UAAU,iBAAiBY,QAAS,kBAAMf,EAAME,gBAAgBS,KAAxE,eAMhB,OACI,+BACKH,IAKEV,I,OCWAkB,E,4MA3DXC,aAAe,CACXJ,KAAM,GACNC,IAAK,I,EAGTI,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACEA,EAAMC,OAAtBR,EADc,EACdA,KAAMS,EADQ,EACRA,MAEd,EAAKC,SAAL,eACKV,EAAOS,K,EAIhBE,WAAa,WACT,EAAKxB,MAAMyB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGb,IAAD,EACiBlB,KAAKmB,MAAnBL,EADH,EACGA,KAAMC,EADT,EACSA,IAEd,OACI,8BACI,yBAAKX,UAAU,cACX,2BAAOuB,QAAQ,QAAf,QACA,2BACIvB,UAAU,eACVwB,KAAK,OACLd,KAAK,OACLe,GAAG,OACHN,MAAOT,EACPgB,SAAU9B,KAAKoB,gBAEvB,yBAAKhB,UAAU,eAGf,yBAAKA,UAAU,cACX,2BAAOuB,QAAQ,OAAf,OACA,2BACIvB,UAAU,eACVwB,KAAK,OACLd,KAAK,MACLe,GAAG,MACHN,MAAOR,EACPe,SAAU9B,KAAKoB,gBAGvB,yBAAKhB,UAAU,cACX,2BAAOwB,KAAK,SAASL,MAAM,SAASP,QAAShB,KAAKyB,WAAYrB,UAAU,0B,GAnDzEC,aC0CJ0B,E,4MAtCbZ,MAAQ,CACNa,WAAY,I,EAGd7B,gBAAkB,SAACS,GAAW,IACpBoB,EAAe,EAAKb,MAApBa,WAER,EAAKR,SAAS,CACZQ,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMvB,Q,EAKnBc,aAAe,SAACQ,GACd,EAAKV,SAAS,CAAEQ,WAAW,GAAD,mBAAM,EAAKb,MAAMa,YAAjB,CAA6BE,O,EAEzDT,WAAa,WACX,EAAKxB,MAAMyB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAEX,IAEAc,EAAehC,KAAKmB,MAApBa,WAER,OACE,yBAAK5B,UAAU,aACb,4CACA,gGACA,6BADA,8DAEA,kBAAC,EAAD,CAAOF,eAAgB8B,EAAY7B,gBAAiBH,KAAKG,kBACzD,kBAAC,EAAD,CAAMuB,aAAc1B,KAAK0B,oB,GAjCfrB,a,YCGlB+B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3a92253a.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Table extends Component {\r\n    render() {\r\n        const { charactersData, removeCharacter } = this.props\r\n\r\n        return (\r\n            <table className='table'>\r\n                <TableHeader></TableHeader>\r\n                <TableBody charactersData={charactersData} removeCharacter={removeCharacter}></TableBody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst TableHeader = () => {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th scope=\"col\">#</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Job</th>\r\n                <th scope=\"col\">Action</th>\r\n            </tr>\r\n        </thead>\r\n    )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n\r\n    const rows = props.charactersData.map((row, index) => {\r\n        return (\r\n            <tr key={index}>\r\n                <th scope=\"row\">{index+1}</th>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button className='btn btn-danger' onClick={() => props.removeCharacter(index)}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <tbody>\r\n            {rows}\r\n        </tbody>\r\n    )\r\n}\r\n\r\nexport default Table","import React, { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name: '',\r\n        job: ''\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    submitForm = () => {\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n      }\r\n      \r\n    render() {\r\n        const { name, job } = this.state;\r\n\r\n        return (\r\n            <form >\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"name\" >Name</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        value={name}\r\n                        onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"form-group\">\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"job\" >Job</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        type=\"text\"\r\n                        name=\"job\"\r\n                        id=\"job\"\r\n                        value={job}\r\n                        onChange={this.handleChange} />\r\n\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input type=\"button\" value=\"Submit\" onClick={this.submitForm} className=\"btn btn-primary\" />\r\n                </div>\r\n\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form","import React, { Component } from 'react'\r\nimport Table from './Table'\r\nimport Form from \"./FormAddChar\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    characters: []\r\n  }\r\n\r\n  removeCharacter = (index) => {\r\n    const { characters } = this.state\r\n\r\n    this.setState({\r\n      characters: characters.filter((character, i) => {\r\n        return i !== index\r\n      }),\r\n    })\r\n  }\r\n\r\n  handleSubmit = (character) => {\r\n    this.setState({ characters: [...this.state.characters, character] })\r\n  }\r\n  submitForm = () => {\r\n    this.props.handleSubmit(this.state)\r\n    this.setState(this.initialState)\r\n  }\r\n  render() {\r\n\r\n    const { characters } = this.state\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>React Basics</h1>\r\n        <p>Add a character with a name and job to the table using form below.\r\n        <br/>Data is not saved on server so will be cleaned on refresh.</p>\r\n        <Table charactersData={characters} removeCharacter={this.removeCharacter}></Table>\r\n        <Form handleSubmit={this.handleSubmit} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default App","import React from \"react\";\r\nimport ReactDOM from 'react-dom'\r\nimport  App  from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}